@use "sass:list";
@use "~open-color/open-color" as oc;
@use "~breakpoint-sass" as bp;
@use "../variables";

body {
  font-family: variables.$font-family-base;
  font-smoothing: antialiased;
}

::selection {
  background: oc.$oc-yellow-1;
}

// full size, mobile size, icon size (ratio)
$header-sizes: (
  'h1': (
    3rem,
    2.2rem,
    0.9
  ),
  'h2': (
    2.2rem,
    1.9rem,
    0.9
  ),
  'h3': (
    1.75rem,
    1.5rem,
    0.9
  ),
  'h4': (
    1.2rem,
    1.1rem,
    1.1
  ),
  'h5': (
    1.1rem,
    1rem,
    1.1
  )
);

@each $type, $size in $header-sizes {
  #{$type} {
    font-size: list.nth($size, 1);

    @include bp.breakpoint(variables.$mobile) {
      font-size: list.nth($size, 2);
    }

    .header-link .icon {
      width: list.nth($size, 1) * list.nth($size, 3);
      height: list.nth($size, 1) * list.nth($size, 3);

      @include bp.breakpoint(variables.$mobile) {
        width: list.nth($size, 2) * list.nth($size, 3);
        height: list.nth($size, 2) * list.nth($size, 3);
      }
    }
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  line-height: 1.3;
  font-family: variables.$font-family-sans-serif;
  font-weight: bold;
  color: variables.$text-color-dark;

  a:not(:hover) {
    color: variables.$text-color-dark;
  }

  a.header-link {
    color: variables.$link-color;
  }

  &:hover .header-link {
    visibility: visible;
  }
}

.header-link {
  color: variables.$link-color;
  visibility: hidden;

  margin: 0 0.5rem;
  &:hover {
    color: variables.$link-color-hover;
  }

  .icon {
    margin: 0;
    border-bottom: 2px solid;
    padding-bottom: 2px;
  }
}

h1 {
  text-rendering: optimizeLegibility;
  margin-bottom: 1.5rem;
}

h2,
h3 {
  line-height: 1.5;
  margin: 3rem 0 1.5rem;
}

h4,
h5 {
  margin: 3rem 0 1rem;
}

h5 {
  color: oc.$oc-gray-7;
}

a {
  color: variables.$link-color;
  text-decoration: none;
  transition: color 150ms ease;

  &:hover {
    color: variables.$link-color-hover;
  }
}

@mixin underlined_link {
  box-shadow: 0 1px variables.$link-color;
  line-height: 1.1;
  overflow: hidden;
  max-width: 100%;
  word-wrap: break-word;

  &:hover {
    box-shadow: 0 1px variables.$link-color-hover;
  }
}

.underlined_link {
  @include underlined_link;
}

p,
ul,
ol,
td {
  color: variables.$text-color;
  font-size: 1.1rem;
  font-weight: 400;
  letter-spacing: 0;
  margin: 1.75rem 0;

  a {
    @extend .underlined_link;
  }

  strong {
    font-weight: 600;
  }

  strong em {
    font-style: normal;
    background: oc.$oc-yellow-1;
  }

  img {
    padding: 1rem 0;
    margin: 0 auto;
    display: block;
  }
}

p,
ul,
ol {
  line-height: 2;
}

a.has-code {
  display: inline-flex;
  align-items: baseline;
}

ul,
ol {
  padding-left: 2rem;
  line-height: 2;
}

ul {
  list-style-type: disc;
}

li {
  padding-left: 0.5rem;
}

blockquote,
.admonition {
  border-radius: 3px;
  margin: 2rem 0;
  padding: 1.5rem 2rem;
  border-left: 0.3rem solid transparent;

  p {
    margin: 1.5rem 0;
    font-style: italic;

    code {
      font-style: normal;
    }
  }

  p:last-of-type {
    margin: 0;
  }

  ul {
    margin-top: 0.75rem;
    margin-bottom: 0.25rem;
  }
}

blockquote {
  border-left-color: variables.$blockquote;
  background: rgba(variables.$blockquote, 0.1);
}

.admonition .admonition-title {
  font-style: normal;
  font-family: Inter;
  text-transform: uppercase;
  font-weight: bold;
  font-size: 0.8rem;
  margin-bottom: 0.5rem;
  display: block;
}

@each $type, $color in variables.$admonitions {
  .admonition.#{$type} {
    border-left-color: $color;
    background: rgba($color, 0.1);

    .admonition-title {
      color: $color;
    }
  }
}

figcaption {
  color: variables.$text-color-light;
  font-size: 0.95rem;
  font-family: Inter;
  margin: 1rem 0 2rem;
  text-align: center;
  line-height: 1.75;
}

.--center {
  text-align: center;
}
